{"script_name": "D:\\University of British Columbia\\Academics\\Year 4\\Term 1\\CPSC 410\\Projects\\Project 2\\cpsc410_project2_team4\\samples\\merge_sort\\merge_sort.py", "class": {"class_runtime": [], "class_memory": []}, "function": {"function_runtime": [{"name": "merge_sort.py/mergeSort(arr)", "total_runtime": 0.0, "percent_runtime": 0}, {"name": "merge_sort.py/validate(arr)", "total_runtime": 7.8, "percent_runtime": 3}], "function_memory": [{"name": "merge_sort.py/mergeSort(arr)", "total_memory": 0.0, "percent_memory": 0.0}, {"name": "merge_sort.py/validate(arr)", "total_memory": 1.0, "percent_memory": 10.0}]}, "line_by_line": [[{"fileName": "merge_sort.py", "line_num": 1, "code": "import sys", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 2, "code": "import random", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 3, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 4, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 5, "code": "def mergeSort(arr):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 6, "code": "    if len(arr) > 1:", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 7, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 8, "code": "        # Finding the mid of the array", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 9, "code": "        mid = len(arr) // 2", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 10, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 11, "code": "        # Dividing the array elements", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 12, "code": "        L = arr[:mid]", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 13, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 14, "code": "        # into 2 halves", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 15, "code": "        R = arr[mid:]", "total_runtime": 7.8, "total_memory": 1.0, "percent_runtime": 3, "percent_memory": 10.0}, {"fileName": "merge_sort.py", "line_num": 16, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 17, "code": "        # Sorting the first half", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 18, "code": "        mergeSort(L)", "total_runtime": 10.4, "total_memory": 0.0, "percent_runtime": 4, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 19, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 20, "code": "        # Sorting the second half", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 21, "code": "        mergeSort(R)", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 22, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 23, "code": "        i = j = k = 0", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 24, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 25, "code": "        # Copy data to temp arrays L[] and R[]", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 26, "code": "        while i < len(L) and j < len(R):", "total_runtime": 114.4, "total_memory": 5.0, "percent_runtime": 44, "percent_memory": 50.0}, {"fileName": "merge_sort.py", "line_num": 27, "code": "            if L[i] < R[j]:", "total_runtime": 20.8, "total_memory": 0.0, "percent_runtime": 8, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 28, "code": "                arr[k] = L[i]", "total_runtime": 18.200000000000003, "total_memory": 0.0, "percent_runtime": 7, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 29, "code": "                i += 1", "total_runtime": 13.0, "total_memory": -2.0, "percent_runtime": 5, "percent_memory": -20.0}, {"fileName": "merge_sort.py", "line_num": 30, "code": "            else:", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 31, "code": "                arr[k] = R[j]", "total_runtime": 31.2, "total_memory": 0.0, "percent_runtime": 12, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 32, "code": "                j += 1", "total_runtime": 0.0, "total_memory": -3.0, "percent_runtime": 0, "percent_memory": -30.0}, {"fileName": "merge_sort.py", "line_num": 33, "code": "            k += 1", "total_runtime": 18.200000000000003, "total_memory": 3.0, "percent_runtime": 7, "percent_memory": 30.0}, {"fileName": "merge_sort.py", "line_num": 34, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 35, "code": "        # Checking if any element was left", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 36, "code": "        while i < len(L):", "total_runtime": 5.2, "total_memory": 0.0, "percent_runtime": 2, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 37, "code": "            arr[k] = L[i]", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 38, "code": "            i += 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 39, "code": "            k += 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 40, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 41, "code": "        while j < len(R):", "total_runtime": 7.8, "total_memory": 0.0, "percent_runtime": 3, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 42, "code": "            arr[k] = R[j]", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 43, "code": "            j += 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 44, "code": "            k += 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 45, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 46, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 47, "code": "# Code to print the list", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 48, "code": "def validate(arr):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 49, "code": "    for i in range(len(arr) - 1):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 50, "code": "        if arr[i] > arr[i + 1]:", "total_runtime": 7.8, "total_memory": 1.0, "percent_runtime": 3, "percent_memory": 10.0}, {"fileName": "merge_sort.py", "line_num": 51, "code": "            return False", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 52, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 53, "code": "    return True", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 54, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 55, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 56, "code": "# Driver code to test above", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 57, "code": "if __name__ == \"__main__\":", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 58, "code": "    A = []", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 59, "code": "    for a in range(int(sys.argv[1])):", "total_runtime": 0.0, "total_memory": 1.0, "percent_runtime": 0, "percent_memory": 10.0}, {"fileName": "merge_sort.py", "line_num": 60, "code": "        A.append(random.random() * 1000)", "total_runtime": 10.4, "total_memory": 3.0, "percent_runtime": 4, "percent_memory": 30.0}, {"fileName": "merge_sort.py", "line_num": 61, "code": "    mergeSort(A)", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 62, "code": "    if not validate(A):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 63, "code": "        print(\"Wrong output\")", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 64, "code": "    else:", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "merge_sort.py", "line_num": 65, "code": "        print(\"Finished with correct output\")", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}]], "e2e": {"e2e_runtime": [{"n": 500, "total_runtime": 4.53, "O(1)": 4.43, "O(log(n))": 0.0, "O(n)": 10.62, "O(n\u00b2)": 17.12, "O(n\u00b3)": 23.42, "O(nlog(n))": 12.5, "O(n\u207f)": 32.02, "O(n!)": 0.0}, {"n": 1000, "total_runtime": 4.43, "O(1)": 4.43, "O(log(n))": 0.0, "O(n)": 11.31, "O(n\u00b2)": 18.51, "O(n\u00b3)": 25.5, "O(nlog(n))": 13.3, "O(n\u207f)": 32.02, "O(n!)": 0.0}, {"n": 5000, "total_runtime": 4.89, "O(1)": 4.43, "O(log(n))": 0.0, "O(n)": 12.92, "O(n\u00b2)": 21.73, "O(n\u00b3)": 30.33, "O(nlog(n))": 15.12, "O(n\u207f)": 32.02, "O(n!)": 0.0}, {"n": 10000, "total_runtime": 5.29, "O(1)": 4.43, "O(log(n))": 0.0, "O(n)": 13.61, "O(n\u00b2)": 23.11, "O(n\u00b3)": 32.41, "O(nlog(n))": 15.89, "O(n\u207f)": 32.02, "O(n!)": 0.0}, {"n": 20000, "total_runtime": 5.69, "O(1)": 4.43, "O(log(n))": 0.0, "O(n)": 14.31, "O(n\u00b2)": 24.5, "O(n\u00b3)": 34.49, "O(nlog(n))": 16.66, "O(n\u207f)": 32.02, "O(n!)": 0.0}], "e2e_memory": [{"n": 500, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 0.0, "O(n\u00b3)": 0.0, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 1000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 0.0, "O(n\u00b3)": 0.0, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 5000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 0.0, "O(n\u00b3)": 0.0, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 10000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 0.0, "O(n\u00b3)": 0.0, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 20000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 0.0, "O(n\u00b3)": 0.0, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}], "e2e_highest_runtime_function": "validate(arr)", "e2e_highest_memory_usage_function": "validate(arr)", "e2e_total_average_time": 160.73, "e2e_total_average_memory": 0.0, "e2e_time_complexity": "n", "e2e_space_complexity": "1"}, "sankey": {"sankey_runtime": {"nodes": [{"name": "mergeSort(arr)"}, {"name": "validate(arr)"}], "links": []}, "sankey_memory": {"nodes": [{"name": "mergeSort(arr)"}, {"name": "validate(arr)"}], "links": []}}}