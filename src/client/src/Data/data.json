{"script_name": "fibonacci.py", "class": {"class_runtime": [], "class_memory": []}, "function": {"function_runtime": [{"name": "fibonacci.py/calculate_nth_fibonacci(n: int)", "total_runtime": 0.0, "percent_runtime": 0}, {"name": "fibonacci.py/calculate_all_fibonacci(limit: int)", "total_runtime": 0.0, "percent_runtime": 0}], "function_memory": [{"name": "fibonacci.py/calculate_nth_fibonacci(n: int)", "total_memory": 0.0, "percent_memory": 0.0}, {"name": "fibonacci.py/calculate_all_fibonacci(limit: int)", "total_memory": 1.0, "percent_memory": 3.571428571428571}]}, "line_by_line": [[{"fileName": "fibonacci.py", "line_num": 1, "code": "import sys", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 2, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 3, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 4, "code": "def calculate_nth_fibonacci(n: int):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 5, "code": "    if n == 0:", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 6, "code": "        return n", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 7, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 8, "code": "    previous = 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 9, "code": "    previous_previous = 0", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 10, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 11, "code": "    while n > 1:", "total_runtime": 1480.5, "total_memory": 0.0, "percent_runtime": 9, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 12, "code": "        curr = previous + previous_previous", "total_runtime": 6086.5, "total_memory": -92.0, "percent_runtime": 37, "percent_memory": -328.57142857142856}, {"fileName": "fibonacci.py", "line_num": 13, "code": "        previous_previous = previous", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 14, "code": "        previous = curr", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 15, "code": "        n -= 1", "total_runtime": 8718.5, "total_memory": 107.0, "percent_runtime": 53, "percent_memory": 382.14285714285717}, {"fileName": "fibonacci.py", "line_num": 16, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 17, "code": "    return previous", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 18, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 19, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 20, "code": "def calculate_all_fibonacci(limit: int):", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 21, "code": "    all_fib = []", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 22, "code": "    while limit > 0:", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 23, "code": "        all_fib.append(calculate_nth_fibonacci(limit - 1))", "total_runtime": 0.0, "total_memory": 1.0, "percent_runtime": 0, "percent_memory": 3.571428571428571}, {"fileName": "fibonacci.py", "line_num": 24, "code": "        limit -= 1", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 25, "code": "    return all_fib", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 26, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 27, "code": "", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 28, "code": "if __name__ == \"__main__\":", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 29, "code": "    calculate_all_fibonacci(int(sys.argv[1]))", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}, {"fileName": "fibonacci.py", "line_num": 30, "code": "    print(\"done!\")", "total_runtime": 0.0, "total_memory": 0.0, "percent_runtime": 0, "percent_memory": 0.0}]], "e2e": {"e2e_runtime": [{"n": 50, "total_runtime": 4.6, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 12.72, "O(n\u00b3)": 18.55, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 100, "total_runtime": 4.69, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 14.1, "O(n\u00b3)": 20.63, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 500, "total_runtime": 4.72, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 17.32, "O(n\u00b3)": 25.46, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 1000, "total_runtime": 5.32, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 18.71, "O(n\u00b3)": 27.53, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 2000, "total_runtime": 6.33, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 20.1, "O(n\u00b3)": 29.61, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 3000, "total_runtime": 7.13, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 20.91, "O(n\u00b3)": 30.83, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 3500, "total_runtime": 7.49, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 21.21, "O(n\u00b3)": 31.29, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 4000, "total_runtime": 7.84, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 21.48, "O(n\u00b3)": 31.69, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 4500, "total_runtime": 8.13, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 21.72, "O(n\u00b3)": 32.05, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 5000, "total_runtime": 8.57, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 21.93, "O(n\u00b3)": 32.36, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 5500, "total_runtime": 8.79, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 22.12, "O(n\u00b3)": 32.65, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 6000, "total_runtime": 8.69, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 22.29, "O(n\u00b3)": 32.91, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 7000, "total_runtime": 8.96, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 22.6, "O(n\u00b3)": 33.37, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}, {"n": 8000, "total_runtime": 9.23, "O(1)": 4.6, "O(log(n))": 0.0, "O(n)": 0.0, "O(n\u00b2)": 22.87, "O(n\u00b3)": 33.77, "O(nlog(n))": 0.0, "O(n\u207f)": 0.0, "O(n!)": 0.0}], "e2e_memory": [{"n": 50, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 2.01, "O(n\u00b2)": 8.33, "O(n\u00b3)": 12.62, "O(nlog(n))": 4.38, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 100, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 2.71, "O(n\u00b2)": 9.72, "O(n\u00b3)": 14.7, "O(nlog(n))": 5.23, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 500, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 4.32, "O(n\u00b2)": 12.94, "O(n\u00b3)": 19.53, "O(nlog(n))": 7.14, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 1000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 5.01, "O(n\u00b2)": 14.32, "O(n\u00b3)": 21.61, "O(nlog(n))": 7.94, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 2000, "total_memory": 0.0, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 5.7, "O(n\u00b2)": 15.71, "O(n\u00b3)": 23.69, "O(nlog(n))": 8.73, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {}}, {"n": 3000, "total_memory": 1.71, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.11, "O(n\u00b2)": 16.52, "O(n\u00b3)": 24.9, "O(nlog(n))": 9.19, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5349376.0}}, {"n": 3500, "total_memory": 1.71, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.26, "O(n\u00b2)": 16.83, "O(n\u00b3)": 25.37, "O(nlog(n))": 9.36, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5363029.333333333}}, {"n": 4000, "total_memory": 1.71, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.4, "O(n\u00b2)": 17.1, "O(n\u00b3)": 25.77, "O(nlog(n))": 9.51, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5331626.666666667}}, {"n": 4500, "total_memory": 1.79, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.51, "O(n\u00b2)": 17.33, "O(n\u00b3)": 26.12, "O(nlog(n))": 9.64, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5204650.666666667, "2010": 5832704.0, "2013": 5988352.0, "2009": 5885952.0}}, {"n": 5000, "total_memory": 1.81, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.62, "O(n\u00b2)": 17.54, "O(n\u00b3)": 26.44, "O(nlog(n))": 9.76, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5218304.0, "2014": 5681152.0, "4024": 6299648.0, "2012": 5705728.0, "4021": 6225920.0, "2009": 5857280.0}}, {"n": 5500, "total_memory": 1.85, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.71, "O(n\u00b2)": 17.73, "O(n\u00b3)": 26.72, "O(nlog(n))": 9.87, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5085866.666666667, "2009": 5623808.0, "4050": 6152192.0, "6061": 6516736.0, "2010": 5693440.0, "4022": 6123520.0, "2019": 5468160.0, "4027": 6225920.0}}, {"n": 6000, "total_memory": 1.81, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.8, "O(n\u00b2)": 17.91, "O(n\u00b3)": 26.98, "O(nlog(n))": 9.96, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5104981.333333333, "2017": 5562368.0, "4024": 6025216.0, "2008": 5459968.0, "4015": 6246400.0, "2030": 5337088.0, "4043": 5976064.0}}, {"n": 7000, "total_memory": 1.82, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 6.96, "O(n\u00b2)": 18.22, "O(n\u00b3)": 27.44, "O(nlog(n))": 10.14, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5099520.0, "2006": 5122048.0, "4013": 5324800.0, "6019": 5943296.0, "2028": 5054464.0, "4037": 5423104.0, "6043": 6180864.0, "4015": 5574656.0, "6021": 6303744.0}}, {"n": 8000, "total_memory": 1.9, "O(1)": 0.0, "O(log(n))": 0.0, "O(n)": 7.09, "O(n\u00b2)": 18.48, "O(n\u00b3)": 27.85, "O(nlog(n))": 10.28, "O(n\u207f)": 0.0, "O(n!)": 0.0, "memory_usage_by_time": {"0": 5094058.666666667, "2006": 5076992.0, "4015": 5464064.0, "6022": 5984256.0, "8028": 6684672.0, "4014": 5443584.0, "6024": 5967872.0, "8029": 6643712.0, "2005": 5128192.0, "4011": 5517312.0, "6017": 5976064.0}}], "e2e_highest_runtime_function": "", "e2e_highest_memory_usage_function": "calculate_all_fibonacci(limit: int)", "e2e_total_average_time": 3275.36, "e2e_total_average_memory": 3.85, "e2e_time_complexity": "1", "e2e_space_complexity": "n"}, "sankey": {"sankey_runtime": {"nodes": [{"name": "calculate_nth_fibonacci(n: int)"}, {"name": "calculate_all_fibonacci(limit: int)"}], "links": []}, "sankey_memory": {"nodes": [{"name": "calculate_nth_fibonacci(n: int)"}, {"name": "calculate_all_fibonacci(limit: int)"}], "links": []}}}